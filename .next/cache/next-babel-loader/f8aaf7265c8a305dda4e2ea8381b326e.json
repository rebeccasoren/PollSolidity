{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/nixi/EthWorkspace/poll/pages/ongoing.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport { Button } from 'semantic-ui-react';\nimport poll from '../ethereum/poll';\nimport Question from '../components/Question';\n\nclass OngoingPoll extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      questionLength: '0'\n    });\n\n    _defineProperty(this, \"questions\", []);\n  }\n\n  async componentDidMount() {\n    const questionLength = await poll.methods.getQuestionLength().call();\n    questions = await _Promise.all(Array(_parseInt(questionLength)).fill().map((element, index) => {\n      return poll.methods.questions(index).call();\n    }));\n    this.setState({\n      questionLength\n    });\n    console.log(questions);\n  }\n\n  renderQuestion() {\n    return this.state.question.map((question, index) => {\n      return;\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.state.questionLength, __jsx(Button, {\n      primary: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Ask a question\"));\n  }\n\n}\n\nexport default OngoingPoll;","map":{"version":3,"sources":["/home/nixi/EthWorkspace/poll/pages/ongoing.js"],"names":["React","Component","Layout","Button","poll","Question","OngoingPoll","questionLength","componentDidMount","methods","getQuestionLength","call","questions","all","Array","fill","map","element","index","setState","console","log","renderQuestion","state","question","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,MAAR,QAAqB,mBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,WAAN,SAA0BL,SAA1B,CAAmC;AAAA;AAAA;;AAAA,mCACzB;AACFM,MAAAA,cAAc,EAAE;AADd,KADyB;;AAAA,uCAKrB,EALqB;AAAA;;AAO/B,QAAMC,iBAAN,GAAyB;AACrB,UAAMD,cAAc,GAAG,MAAMH,IAAI,CAACK,OAAL,CAAaC,iBAAb,GAAiCC,IAAjC,EAA7B;AAEAC,IAAAA,SAAS,GAAG,MAAM,SAAQC,GAAR,CACdC,KAAK,CAAC,UAASP,cAAT,CAAD,CAAL,CACCQ,IADD,GAECC,GAFD,CAEK,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACrB,aAAOd,IAAI,CAACK,OAAL,CAAaG,SAAb,CAAuBM,KAAvB,EAA8BP,IAA9B,EAAP;AACH,KAJD,CADc,CAAlB;AAQA,SAAKQ,QAAL,CAAc;AACVZ,MAAAA;AADU,KAAd;AAIAa,IAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ;AACH;;AACDU,EAAAA,cAAc,GAAE;AACZ,WAAO,KAAKC,KAAL,CAAWC,QAAX,CAAoBR,GAApB,CAAwB,CAACQ,QAAD,EAAWN,KAAX,KAAmB;AAClD;AACC,KAFM,CAAP;AAGH;;AAGDO,EAAAA,MAAM,GAAE;AACJ,WACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKF,KAAL,CAAWhB,cADhB,EAGQ,MAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHR,CADJ;AAQH;;AAxC8B;;AA2CnC,eAAeD,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport Layout from '../components/Layout';\nimport {Button} from 'semantic-ui-react';\nimport poll from '../ethereum/poll';\nimport Question from '../components/Question';\n\nclass OngoingPoll extends Component{\n    state={\n        questionLength: '0',\n    };\n\n    questions=[]\n\n    async componentDidMount(){\n        const questionLength = await poll.methods.getQuestionLength().call();\n        \n        questions = await Promise.all(\n            Array(parseInt(questionLength))\n            .fill()\n            .map((element, index) => {\n                return poll.methods.questions(index).call()\n            })\n        );\n        \n        this.setState({\n            questionLength\n        });\n\n        console.log(questions);\n    }\n    renderQuestion(){\n        return this.state.question.map((question, index)=>{\n        return\n        });\n    }\n    \n\n    render(){\n        return(\n            <Layout>\n                {this.state.questionLength}     \n                \n                    <Button primary>Ask a question</Button>\n                \n            </Layout>\n        );\n    }\n}\n\nexport default OngoingPoll;"]},"metadata":{},"sourceType":"module"}