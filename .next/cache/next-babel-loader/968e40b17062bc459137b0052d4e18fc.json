{"ast":null,"code":"var _jsxFileName = \"/home/nixi/EthWorkspace/poll/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport manager from '../ethereum/manager';\nimport { Card } from 'semantic-ui-react';\n\nclass PollIndex extends Component {\n  static async getInitialProps() {\n    const polls = await manager.methods.getDeployedPolls();\n    return {\n      polls\n    };\n  }\n\n  renderPolls() {\n    const items = this.props.polls.map(address => {\n      return address;\n    });\n    return __jsx(Card.Group, {\n      items: items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.renderPolls());\n  }\n\n}\n\nexport default PollIndex;","map":{"version":3,"sources":["/home/nixi/EthWorkspace/poll/pages/index.js"],"names":["React","Component","manager","Card","PollIndex","getInitialProps","polls","methods","getDeployedPolls","renderPolls","items","props","map","address","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,IAAT,QAAqB,mBAArB;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAC9B,eAAaI,eAAb,GAA8B;AAC1B,UAAMC,KAAK,GAAG,MAAMJ,OAAO,CAACK,OAAR,CAAgBC,gBAAhB,EAApB;AACA,WAAO;AAACF,MAAAA;AAAD,KAAP;AACH;;AAEDG,EAAAA,WAAW,GAAE;AACT,UAAMC,KAAK,GAAC,KAAKC,KAAL,CAAWL,KAAX,CAAiBM,GAAjB,CAAqBC,OAAO,IAAE;AACtC,aAAOA,OAAP;AACH,KAFW,CAAZ;AAGA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEH,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACDI,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKL,WAAL,EAAL,CADJ;AAIH;;AAjB6B;;AAoBlC,eAAeL,SAAf","sourcesContent":["import React, {Component} from 'react';\nimport manager from '../ethereum/manager';\nimport { Card } from 'semantic-ui-react';\n\nclass PollIndex extends Component {\n    static async getInitialProps(){\n        const polls = await manager.methods.getDeployedPolls();\n        return {polls};\n    }\n\n    renderPolls(){\n        const items=this.props.polls.map(address=>{\n            return address;\n        });\n        return <Card.Group items={items} />\n    }\n    render(){\n        return (\n            <h1>{this.renderPolls()}</h1>\n            \n        );\n    }\n}\n\nexport default PollIndex;"]},"metadata":{},"sourceType":"module"}