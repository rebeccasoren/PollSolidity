{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport { Button } from 'semantic-ui-react';\nimport poll from '../ethereum/poll';\nimport Question from '../components/Question';\n\nclass OngoingPoll extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      questionLength: ''\n    });\n  }\n\n  async componentDidMount() {\n    const questionLength = await poll.methods.getQuestionLength().call();\n    const questions = await _Promise.all(Array(_parseInt(questionLength)).fill().map((element, index) => {\n      return campaign.methods.questions(index).call();\n    }));\n    this.setState({\n      questionLength\n    });\n    return {\n      questions\n    };\n  }\n\n  renderQuestions() {\n    return this.props.questions.map((question, index) => {\n      return __jsx(Question, {\n        key: index,\n        id: index,\n        question: question\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, this.state.questionLength, this.renderQuestions(), __jsx(Button, {\n      primary: true\n    }, \"Ask a question\"));\n  }\n\n}\n\nexport default OngoingPoll;","map":null,"metadata":{},"sourceType":"module"}