{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/nixi/EthWorkspace/poll/pages/ongoing.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport { Button, Card, Container } from 'semantic-ui-react';\nimport poll from '../ethereum/poll';\nimport { Link } from '../routes';\nimport { AsyncResource } from 'async_hooks';\nimport web3 from '../ethereum/web3';\n\nclass OngoingPoll extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      questionLength: '0',\n      questions: []\n    });\n\n    _defineProperty(this, \"_isMounted\", true);\n\n    _defineProperty(this, \"voteYay\", () => {\n      console.log(\"votes\");\n    });\n  }\n\n  async componentDidMount() {\n    const questionLength = await poll.methods.getQuestionLength().call();\n    const questions = await _Promise.all(Array(_parseInt(questionLength)).fill().map((element, index) => {\n      return poll.methods.questions(index).call();\n    }));\n    this.setState({\n      questionLength,\n      questions\n    });\n  }\n\n  voteNay() {}\n\n  renderQuestion() {\n    const items = this.state.questions.map((index, question) => {\n      return {\n        id: {\n          index\n        },\n        header: question[0],\n        description: __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, __jsx(Button, {\n          onClick: this.voteYay,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"Yay\"), __jsx(Button, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, \"Nay\"))\n      };\n    });\n    return __jsx(Card.Group, {\n      centered: true,\n      itemsPerRow: 2,\n      items: items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.state.questionLength, \" Ongoing Polls\"), this.renderQuestion()), __jsx(Link, {\n      route: \"/ongoing/add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, __jsx(Button, {\n      primary: true,\n      style: {\n        marginTop: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Ask a question\")));\n  }\n\n}\n\nexport default OngoingPoll;","map":{"version":3,"sources":["/home/nixi/EthWorkspace/poll/pages/ongoing.js"],"names":["React","Component","Layout","Button","Card","Container","poll","Link","AsyncResource","web3","OngoingPoll","questionLength","questions","console","log","componentDidMount","methods","getQuestionLength","call","all","Array","fill","map","element","index","setState","voteNay","renderQuestion","items","state","question","id","header","description","voteYay","render","marginTop"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,SAAtB,QAAsC,mBAAtC;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAAQC,IAAR,QAAmB,WAAnB;AACA,SAASC,aAAT,QAA8B,aAA9B;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;AACA,MAAMC,WAAN,SAA0BT,SAA1B,CAAmC;AAAA;AAAA;;AAAA,mCACzB;AACFU,MAAAA,cAAc,EAAE,GADd;AAEFC,MAAAA,SAAS,EAAE;AAFT,KADyB;;AAAA,wCAKnB,IALmB;;AAAA,qCAyBrB,MAAM;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,KA3B8B;AAAA;;AAM/B,QAAMC,iBAAN,GAAyB;AACrB,UAAMJ,cAAc,GAAG,MAAML,IAAI,CAACU,OAAL,CAAaC,iBAAb,GAAiCC,IAAjC,EAA7B;AAEA,UAAMN,SAAS,GAAG,MAAM,SAAQO,GAAR,CACpBC,KAAK,CAAC,UAAST,cAAT,CAAD,CAAL,CACCU,IADD,GAECC,GAFD,CAEK,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACrB,aAAOlB,IAAI,CAACU,OAAL,CAAaJ,SAAb,CAAuBY,KAAvB,EAA8BN,IAA9B,EAAP;AACH,KAJD,CADoB,CAAxB;AAQI,SAAKO,QAAL,CAAc;AACVd,MAAAA,cADU;AAEVC,MAAAA;AAFU,KAAd;AAMP;;AAMDc,EAAAA,OAAO,GAAE,CAER;;AACDC,EAAAA,cAAc,GAAE;AACZ,UAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWjB,SAAX,CAAqBU,GAArB,CAAyB,CAACE,KAAD,EAAOM,QAAP,KAAmB;AAClD,aAAM;AACFC,QAAAA,EAAE,EAAE;AAACP,UAAAA;AAAD,SADF;AAEFQ,QAAAA,MAAM,EAAEF,QAAQ,CAAC,CAAD,CAFd;AAGFG,QAAAA,WAAW,EACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAKC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ;AAJF,OAAN;AAUH,KAXS,CAAd;AAaA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,QAAQ,MAApB;AAAqB,MAAA,WAAW,EAAE,CAAlC;AAAqC,MAAA,KAAK,EAAGN,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAGDO,EAAAA,MAAM,GAAE;AACJ,WACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKN,KAAL,CAAWlB,cAAf,mBADJ,EAEK,KAAKgB,cAAL,EAFL,CADJ,EAKI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,KAAK,EAAE;AAACS,QAAAA,SAAS,EAAE;AAAZ,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,CALJ,CADJ;AAYH;;AA/D8B;;AAkEnC,eAAe1B,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport Layout from '../components/Layout';\nimport {Button, Card, Container} from 'semantic-ui-react';\nimport poll from '../ethereum/poll';\nimport {Link} from '../routes'\nimport { AsyncResource } from 'async_hooks';\nimport web3 from '../ethereum/web3';\nclass OngoingPoll extends Component{\n    state={\n        questionLength: '0',\n        questions: [],\n    };\n    _isMounted= true;\n    async componentDidMount(){\n        const questionLength = await poll.methods.getQuestionLength().call();\n        \n        const questions = await Promise.all(\n            Array(parseInt(questionLength))\n            .fill()\n            .map((element, index) => {\n                return poll.methods.questions(index).call()\n            })\n        );\n       \n            this.setState({\n                questionLength,\n                questions\n            });\n       \n        \n    }\n    \n    voteYay = () => {\n        console.log(\"votes\");\n    }\n    \n    voteNay(){\n\n    }\n    renderQuestion(){\n        const items = this.state.questions.map((index,question) =>{\n                return{\n                    id: {index},\n                    header: question[0],\n                    description: (\n                        <div>\n                            <Button onClick={this.voteYay}>Yay</Button>\n                            <Button>Nay</Button>\n                        </div>\n                    )\n                };\n            });\n\n        return <Card.Group centered itemsPerRow={2} items ={items}/> \n    }\n    \n\n    render(){\n        return(\n            <Layout>\n                <Container>\n                    <p>{this.state.questionLength} Ongoing Polls</p>\n                    {this.renderQuestion()}       \n                </Container>\n                <Link route='/ongoing/add'>\n                <Button primary style={{marginTop: '10px'}}>Ask a question</Button>\n                </Link>\n                   \n            </Layout>\n        );\n    }\n}\n\nexport default OngoingPoll;"]},"metadata":{},"sourceType":"module"}