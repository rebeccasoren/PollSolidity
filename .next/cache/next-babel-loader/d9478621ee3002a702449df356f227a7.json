{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport { Form, Button, Message, Container } from 'semantic-ui-react';\nimport { Router } from '../../routes';\nimport web3 from '../../ethereum/web3';\nimport poll from '../../ethereum/poll';\n\nvar Add = /*#__PURE__*/function (_Component) {\n  _inherits(Add, _Component);\n\n  var _super = _createSuper(Add);\n\n  function Add() {\n    var _this;\n\n    _classCallCheck(this, Add);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      message: '',\n      loading: false,\n      description: '',\n      show: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function _callee(event) {\n      var accounts;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              _this.setState({\n                message: '',\n                loading: true\n              });\n\n              _context.prev = 2;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 5:\n              accounts = _context.sent;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(poll.methods.askQuestion(_this.state.description).send({\n                from: accounts[0]\n              }));\n\n            case 8:\n              Router.pushRoute(\"/ongoing\");\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n\n              _this.setState({\n                message: _context.t0.message\n              });\n\n            case 14:\n              _this.setState({\n                loading: false\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 11]], Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(Add, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var manager, accounts;\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(poll.methods.manager().call());\n\n            case 2:\n              manager = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 5:\n              accounts = _context2.sent;\n\n              if (accounts[0] == manager) {\n                this.setState({\n                  show: true\n                });\n              }\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, null, __jsx(Container, null, __jsx(\"center\", null, this.state.show ? null : __jsx(Message, {\n        warning: true,\n        header: \"Sorry\",\n        content: \"Currently only manager can ask questions\"\n      }), __jsx(Form, {\n        inverted: true,\n        onSubmit: this.onSubmit,\n        error: !!this.state.message\n      }, __jsx(Form.Input, {\n        width: 6,\n        label: \"Question\",\n        value: this.state.description,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            description: event.target.value\n          });\n        }\n      }), __jsx(Message, {\n        compact: true,\n        error: true,\n        header: \"Oops\",\n        content: this.state.message\n      }), __jsx(\"br\", null), __jsx(Button, {\n        content: \"Add Question\",\n        primary: true,\n        loading: this.state.loading,\n        size: \"huge\"\n      })))));\n    }\n  }]);\n\n  return Add;\n}(Component);\n\nexport default Add;","map":null,"metadata":{},"sourceType":"module"}