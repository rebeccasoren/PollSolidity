{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/nixi/EthWorkspace/poll/pages/ongoing.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport { Button, Card } from 'semantic-ui-react';\nimport poll from '../ethereum/poll';\nimport Question from '../components/Question';\n\nclass OngoingPoll extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      questionLength: '0',\n      questions: []\n    });\n\n    _defineProperty(this, \"_isMounted\", true);\n  }\n\n  async componentDidMount() {\n    const questionLength = await poll.methods.getQuestionLength().call();\n    const questions = await _Promise.all(Array(_parseInt(questionLength)).fill().map((element, index) => {\n      return poll.methods.questions(index).call();\n    }));\n\n    if (this._isMounted) {\n      this.setState({\n        questionLength,\n        questions\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  renderQuestion() {\n    const items = this.state.questions.map(question => {\n      return {\n        header: question[0],\n        description: __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, __jsx(Button, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"Yay\"), __jsx(Button, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"Nay\"))\n      };\n    });\n    return __jsx(Card.Group, {\n      items: items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.state.questionLength, this.renderQuestion(), __jsx(Button, {\n      primary: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Ask a question\"));\n  }\n\n}\n\nexport default OngoingPoll;","map":{"version":3,"sources":["/home/nixi/EthWorkspace/poll/pages/ongoing.js"],"names":["React","Component","Layout","Button","Card","poll","Question","OngoingPoll","questionLength","questions","componentDidMount","methods","getQuestionLength","call","all","Array","fill","map","element","index","_isMounted","setState","componentWillUnmount","renderQuestion","items","state","question","header","description","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,QAA2B,mBAA3B;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,WAAN,SAA0BN,SAA1B,CAAmC;AAAA;AAAA;;AAAA,mCACzB;AACFO,MAAAA,cAAc,EAAE,GADd;AAEFC,MAAAA,SAAS,EAAE;AAFT,KADyB;;AAAA,wCAMnB,IANmB;AAAA;;AAO/B,QAAMC,iBAAN,GAAyB;AACrB,UAAMF,cAAc,GAAG,MAAMH,IAAI,CAACM,OAAL,CAAaC,iBAAb,GAAiCC,IAAjC,EAA7B;AAEA,UAAMJ,SAAS,GAAG,MAAM,SAAQK,GAAR,CACpBC,KAAK,CAAC,UAASP,cAAT,CAAD,CAAL,CACCQ,IADD,GAECC,GAFD,CAEK,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACrB,aAAOd,IAAI,CAACM,OAAL,CAAaF,SAAb,CAAuBU,KAAvB,EAA8BN,IAA9B,EAAP;AACH,KAJD,CADoB,CAAxB;;AAOA,QAAG,KAAKO,UAAR,EAAmB;AACf,WAAKC,QAAL,CAAc;AACVb,QAAAA,cADU;AAEVC,QAAAA;AAFU,OAAd;AAIH;AAEJ;;AACDa,EAAAA,oBAAoB,GAAE;AAClB,SAAKF,UAAL,GAAkB,KAAlB;AACH;;AACDG,EAAAA,cAAc,GAAE;AACZ,UAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWhB,SAAX,CAAqBQ,GAArB,CAAyBS,QAAQ,IAAG;AAC1C,aAAM;AACFC,QAAAA,MAAM,EAAED,QAAQ,CAAC,CAAD,CADd;AAEFE,QAAAA,WAAW,EACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAL,EACA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA;AAHF,OAAN;AAQH,KATS,CAAd;AAWA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAGJ,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAGDK,EAAAA,MAAM,GAAE;AACJ,WACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKJ,KAAL,CAAWjB,cADhB,EAEK,KAAKe,cAAL,EAFL,EAGQ,MAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHR,CADJ;AAQH;;AArD8B;;AAwDnC,eAAehB,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport Layout from '../components/Layout';\nimport {Button, Card} from 'semantic-ui-react';\nimport poll from '../ethereum/poll';\nimport Question from '../components/Question';\n\nclass OngoingPoll extends Component{\n    state={\n        questionLength: '0',\n        questions: []\n        \n    };\n    _isMounted= true;\n    async componentDidMount(){\n        const questionLength = await poll.methods.getQuestionLength().call();\n        \n        const questions = await Promise.all(\n            Array(parseInt(questionLength))\n            .fill()\n            .map((element, index) => {\n                return poll.methods.questions(index).call()\n            })\n        );\n        if(this._isMounted){\n            this.setState({\n                questionLength,\n                questions\n            });\n        }\n        \n    }\n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    renderQuestion(){\n        const items = this.state.questions.map(question =>{\n                return{\n                    header: question[0],\n                    description: (\n                        <div><Button>Yay</Button>\n                        <Button>Nay</Button></div>\n                    \n                    )\n                };\n            });\n\n        return <Card.Group items ={items}/> \n    }\n    \n\n    render(){\n        return(\n            <Layout>\n                {this.state.questionLength}     \n                {this.renderQuestion()}           \n                    <Button primary>Ask a question</Button>\n                \n            </Layout>\n        );\n    }\n}\n\nexport default OngoingPoll;"]},"metadata":{},"sourceType":"module"}