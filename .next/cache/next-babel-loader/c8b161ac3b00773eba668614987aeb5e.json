{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar _jsxFileName = \"/home/nixi/EthWorkspace/poll/pages/ongoing.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport { Button, Card, Container } from 'semantic-ui-react';\nimport poll from '../ethereum/poll';\nimport { Link } from '../routes';\nimport web3 from '../ethereum/web3';\n\nclass OngoingPoll extends Component {\n  static async getInitialProps() {\n    const questionLength = await poll.methods.getQuestionLength().call();\n    const questions = await _Promise.all(Array(_parseInt(questionLength)).fill().map((element, index) => {\n      return poll.methods.questions(index).call();\n    }));\n    console.log(questions);\n    return {\n      questionLength,\n      questions\n    };\n  }\n\n  renderQuestion() {\n    return this.props.questions.map((question, index) => {\n      return __jsx(Question, {\n        id: index,\n        question: question[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.props.questionLength, \" Ongoing Polls\"), this.renderQuestion()), __jsx(Link, {\n      route: \"/ongoing/add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, __jsx(Button, {\n      primary: true,\n      style: {\n        marginTop: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Ask a question\")));\n  }\n\n}\n\nexport default OngoingPoll;","map":{"version":3,"sources":["/home/nixi/EthWorkspace/poll/pages/ongoing.js"],"names":["React","Component","Layout","Button","Card","Container","poll","Link","web3","OngoingPoll","getInitialProps","questionLength","methods","getQuestionLength","call","questions","all","Array","fill","map","element","index","console","log","renderQuestion","props","question","render","marginTop"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,SAAtB,QAAsC,mBAAtC;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAAQC,IAAR,QAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;AAEA,MAAMC,WAAN,SAA0BR,SAA1B,CAAmC;AAG/B,eAAaS,eAAb,GAA8B;AAC1B,UAAMC,cAAc,GAAG,MAAML,IAAI,CAACM,OAAL,CAAaC,iBAAb,GAAiCC,IAAjC,EAA7B;AAEA,UAAMC,SAAS,GAAG,MAAM,SAAQC,GAAR,CACpBC,KAAK,CAAC,UAASN,cAAT,CAAD,CAAL,CACCO,IADD,GAECC,GAFD,CAEK,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACrB,aAAOf,IAAI,CAACM,OAAL,CAAaG,SAAb,CAAuBM,KAAvB,EAA8BP,IAA9B,EAAP;AACH,KAJD,CADoB,CAAxB;AAOAQ,IAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ;AACA,WAAM;AACFJ,MAAAA,cADE;AAEFI,MAAAA;AAFE,KAAN;AAIH;;AAIDS,EAAAA,cAAc,GAAE;AACZ,WAAO,KAAKC,KAAL,CAAWV,SAAX,CAAqBI,GAArB,CAAyB,CAACO,QAAD,EAAWL,KAAX,KAAqB;AACjD,aAAO,MAAC,QAAD;AACP,QAAA,EAAE,EAAEA,KADG;AAEP,QAAA,QAAQ,EAAEK,QAAQ,CAAC,CAAD,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAIH,KALM,CAAP;AAMH;;AAGDC,EAAAA,MAAM,GAAE;AACJ,WACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKF,KAAL,CAAWd,cAAf,mBADJ,EAEK,KAAKa,cAAL,EAFL,CADJ,EAKI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,KAAK,EAAE;AAACI,QAAAA,SAAS,EAAE;AAAZ,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,CALJ,CADJ;AAYH;;AA7C8B;;AAgDnC,eAAenB,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport Layout from '../components/Layout';\nimport {Button, Card, Container} from 'semantic-ui-react';\nimport poll from '../ethereum/poll';\nimport {Link} from '../routes'\nimport web3 from '../ethereum/web3';\n\nclass OngoingPoll extends Component{\n    \n    \n    static async getInitialProps(){\n        const questionLength = await poll.methods.getQuestionLength().call();\n       \n        const questions = await Promise.all(\n            Array(parseInt(questionLength))\n            .fill()\n            .map((element, index) => {\n                return poll.methods.questions(index).call()\n            })\n        );\n        console.log(questions);\n        return{\n            questionLength,\n            questions\n        }\n    }\n\n    \n\n    renderQuestion(){\n        return this.props.questions.map((question, index) => {\n            return <Question \n            id={index}\n            question={question[0]}\n            />;\n        });\n    }\n    \n\n    render(){\n        return(\n            <Layout>\n                <Container>\n                    <p>{this.props.questionLength} Ongoing Polls</p>\n                    {this.renderQuestion()}       \n                </Container>\n                <Link route='/ongoing/add'>\n                <Button primary style={{marginTop: '10px'}}>Ask a question</Button>\n                </Link>\n                   \n            </Layout>\n        );\n    }\n}\n\nexport default OngoingPoll;"]},"metadata":{},"sourceType":"module"}