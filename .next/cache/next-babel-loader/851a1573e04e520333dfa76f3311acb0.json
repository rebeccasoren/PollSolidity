{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/nixi/EthWorkspace/poll/pages/ongoing.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport { Button, Card, Container } from 'semantic-ui-react';\nimport poll from '../ethereum/poll';\nimport { Link } from '../routes';\nimport web3 from '../ethereum/web3';\n\nclass OngoingPoll extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"voteYes\", async () => {\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts);\n      await poll.methods.voteYay(this.props.id).send({\n        from: accounts[0]\n      });\n    });\n  }\n\n  static async getInitialProps() {\n    const questionLength = await poll.methods.getQuestionLength().call();\n    const questions = await _Promise.all(Array(_parseInt(questionLength)).fill().map((element, index) => {\n      return poll.methods.questions(index).call();\n    }));\n    console.log(questions);\n    return {\n      questionLength,\n      questions\n    };\n  }\n\n  renderQuestion() {\n    const items = this.props.questions.map((question, index) => {\n      return {\n        id: {\n          index\n        },\n        header: question[0],\n        description: __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, __jsx(Button, {\n          onClick: this.voteYes,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"Yay\"), __jsx(Button, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"Nay\"))\n      };\n    });\n    return __jsx(Card.Group, {\n      centered: true,\n      itemsPerRow: 2,\n      items: items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    });\n  }\n\n  voteNay() {}\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.props.questionLength, \" Ongoing Polls\"), this.renderQuestion()), __jsx(Link, {\n      route: \"/ongoing/add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, __jsx(Button, {\n      primary: true,\n      style: {\n        marginTop: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Ask a question\")));\n  }\n\n}\n\nexport default OngoingPoll;","map":{"version":3,"sources":["/home/nixi/EthWorkspace/poll/pages/ongoing.js"],"names":["React","Component","Layout","Button","Card","Container","poll","Link","web3","OngoingPoll","accounts","eth","getAccounts","console","log","methods","voteYay","props","id","send","from","getInitialProps","questionLength","getQuestionLength","call","questions","all","Array","fill","map","element","index","renderQuestion","items","question","header","description","voteYes","voteNay","render","marginTop"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,SAAtB,QAAsC,mBAAtC;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAAQC,IAAR,QAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;AAEA,MAAMC,WAAN,SAA0BR,SAA1B,CAAmC;AAAA;AAAA;;AAAA,qCACrB,YAAY;AAClB,YAAMS,QAAQ,GAAG,MAAMF,IAAI,CAACG,GAAL,CAASC,WAAT,EAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,YAAMJ,IAAI,CAACS,OAAL,CAAaC,OAAb,CAAqB,KAAKC,KAAL,CAAWC,EAAhC,EACLC,IADK,CACA;AACFC,QAAAA,IAAI,EAAEV,QAAQ,CAAC,CAAD;AADZ,OADA,CAAN;AAIH,KAR8B;AAAA;;AAU/B,eAAaW,eAAb,GAA8B;AAC1B,UAAMC,cAAc,GAAG,MAAMhB,IAAI,CAACS,OAAL,CAAaQ,iBAAb,GAAiCC,IAAjC,EAA7B;AAEA,UAAMC,SAAS,GAAG,MAAM,SAAQC,GAAR,CACpBC,KAAK,CAAC,UAASL,cAAT,CAAD,CAAL,CACCM,IADD,GAECC,GAFD,CAEK,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACrB,aAAOzB,IAAI,CAACS,OAAL,CAAaU,SAAb,CAAuBM,KAAvB,EAA8BP,IAA9B,EAAP;AACH,KAJD,CADoB,CAAxB;AAOAX,IAAAA,OAAO,CAACC,GAAR,CAAYW,SAAZ;AACA,WAAM;AACFH,MAAAA,cADE;AAEFG,MAAAA;AAFE,KAAN;AAIH;;AAIDO,EAAAA,cAAc,GAAE;AACZ,UAAMC,KAAK,GAAE,KAAKhB,KAAL,CAAWQ,SAAX,CAAqBI,GAArB,CAAyB,CAACK,QAAD,EAAWH,KAAX,KAAqB;AACvD,aAAM;AACFb,QAAAA,EAAE,EAAE;AAACa,UAAAA;AAAD,SADF;AAEFI,QAAAA,MAAM,EAAED,QAAQ,CAAC,CAAD,CAFd;AAGFE,QAAAA,WAAW,EACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAKC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ;AAJF,OAAN;AAUH,KAXY,CAAb;AAaJ,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,QAAQ,MAApB;AAAqB,MAAA,WAAW,EAAE,CAAlC;AAAqC,MAAA,KAAK,EAAGJ,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACC;;AAIDK,EAAAA,OAAO,GAAE,CAER;;AAIDC,EAAAA,MAAM,GAAE;AACJ,WACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKtB,KAAL,CAAWK,cAAf,mBADJ,EAEK,KAAKU,cAAL,EAFL,CADJ,EAKI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,KAAK,EAAE;AAACQ,QAAAA,SAAS,EAAE;AAAZ,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,CALJ,CADJ;AAYH;;AAnE8B;;AAsEnC,eAAe/B,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport Layout from '../components/Layout';\nimport {Button, Card, Container} from 'semantic-ui-react';\nimport poll from '../ethereum/poll';\nimport {Link} from '../routes'\nimport web3 from '../ethereum/web3';\n\nclass OngoingPoll extends Component{\n    voteYes = async () => {\n        const accounts = await web3.eth.getAccounts();\n        console.log(accounts);\n        await poll.methods.voteYay(this.props.id)\n        .send({\n            from: accounts[0]\n        });\n    };\n    \n    static async getInitialProps(){\n        const questionLength = await poll.methods.getQuestionLength().call();\n       \n        const questions = await Promise.all(\n            Array(parseInt(questionLength))\n            .fill()\n            .map((element, index) => {\n                return poll.methods.questions(index).call()\n            })\n        );\n        console.log(questions);\n        return{\n            questionLength,\n            questions\n        }\n    }\n\n    \n\n    renderQuestion(){\n        const items= this.props.questions.map((question, index) => {\n            return{\n                id: {index},\n                header: question[0],\n                description: (\n                    <div>\n                        <Button onClick={this.voteYes}>Yay</Button>\n                        <Button>Nay</Button>\n                    </div>\n                )\n            };\n        });\n\n    return <Card.Group centered itemsPerRow={2} items ={items}/> ;\n    }\n    \n    \n    \n    voteNay(){\n\n    }\n    \n    \n\n    render(){\n        return(\n            <Layout>\n                <Container>\n                    <p>{this.props.questionLength} Ongoing Polls</p>\n                    {this.renderQuestion()}       \n                </Container>\n                <Link route='/ongoing/add'>\n                <Button primary style={{marginTop: '10px'}}>Ask a question</Button>\n                </Link>\n                   \n            </Layout>\n        );\n    }\n}\n\nexport default OngoingPoll;"]},"metadata":{},"sourceType":"module"}