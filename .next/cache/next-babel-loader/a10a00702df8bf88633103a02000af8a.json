{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Button, Card } from 'semantic-ui-react';\n\nvar Answer = /*#__PURE__*/function (_Component) {\n  _inherits(Answer, _Component);\n\n  var _super = _createSuper(Answer);\n\n  function Answer() {\n    _classCallCheck(this, Answer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Answer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          question = _this$props.question,\n          complete = _this$props.complete,\n          answer = _this$props.answer;\n      return __jsx(Card.Group, {\n        centered: true,\n        itemsPerRow: 3\n      }, !complete ? null : __jsx(Card, null, __jsx(Card.Content, null, __jsx(Card.Header, {\n        style: {\n          marginTop: '20px'\n        }\n      }, question), __jsx(Card.Content, null, !complete ? null : __jsx(Button, {\n        fluid: true,\n        style: {\n          marginTop: '20px'\n        },\n        color: this.props.color\n      }, \" \", answer, \" \")))));\n    }\n  }]);\n\n  return Answer;\n}(Component);\n\nexport default Answer;","map":null,"metadata":{},"sourceType":"module"}