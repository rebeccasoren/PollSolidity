{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Button, Card, Container } from 'semantic-ui-react';\nimport poll from '../ethereum/poll';\nimport web3 from '../ethereum/web3';\n\nvar Question =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Question, _Component);\n\n  function Question() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Question);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Question)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"voteYes\", function _callee() {\n      var accounts;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 2:\n              accounts = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(poll.methods.voteYay(_this.props.id).send({\n                from: accounts[0]\n              }));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"voteNo\", function _callee2() {\n      var accounts;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 2:\n              accounts = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(poll.methods.voteNay(_this.props.id).send({\n                from: accounts[0]\n              }));\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"declare\", function _callee3() {\n      var accounts;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 2:\n              accounts = _context3.sent;\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(poll.methods.updateAnswer(_this.props.id).send({\n                from: accounts[0]\n              }));\n\n            case 5:\n              document.location.reload();\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Question, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          question = _this$props.question,\n          complete = _this$props.complete;\n      return __jsx(Card.Group, {\n        centered: true\n      }, complete ? null : __jsx(Card, null, __jsx(Card.Content, null, __jsx(Card.Header, null, question), __jsx(Card.Content, {\n        extra: true\n      }, __jsx(\"div\", null, __jsx(Button, {\n        basic: true,\n        color: \"green\",\n        onClick: this.voteYes\n      }, \"Yay\"), __jsx(Button, {\n        basic: true,\n        color: \"red\",\n        onClick: this.voteNo\n      }, \"Nay\"), __jsx(Button, {\n        fluid: true,\n        onClick: this.declare\n      }, \"Declare Result\"))))));\n    }\n  }]);\n\n  return Question;\n}(Component);\n\nexport default Question;","map":null,"metadata":{},"sourceType":"module"}