{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/nixi/EthWorkspace/poll/pages/ongoing/add.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport { Form, Button, Message, Container } from 'semantic-ui-react';\nimport { Router } from '../../routes';\nimport web3 from '../../ethereum/web3';\nimport poll from '../../ethereum/poll';\n\nvar Add =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Add, _Component);\n\n  function Add() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Add);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Add)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      message: '',\n      loading: false,\n      description: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function _callee(event) {\n      var accounts;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              _this.setState({\n                message: ''\n              });\n\n              _context.prev = 2;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 5:\n              accounts = _context.sent;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(poll.methods.askQuestion(_this.state.description).send({\n                from: accounts[0]\n              }));\n\n            case 8:\n              Router.pushRoute(\"/ongoing\");\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n\n              _this.setState({\n                message: _context.t0.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 11]]);\n    });\n\n    return _this;\n  }\n\n  _createClass(Add, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, __jsx(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, __jsx(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, __jsx(Form, {\n        inverted: true,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, __jsx(Form.Input, {\n        width: 6,\n        label: \"Question\",\n        value: this.state.description,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            description: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), __jsx(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Add Question\")))));\n    }\n  }]);\n\n  return Add;\n}(Component);\n\nexport default Add;","map":{"version":3,"sources":["/home/nixi/EthWorkspace/poll/pages/ongoing/add.js"],"names":["React","Component","Layout","Form","Button","Message","Container","Router","web3","poll","Add","message","loading","description","event","preventDefault","setState","eth","getAccounts","accounts","methods","askQuestion","state","send","from","pushRoute","onSubmit","target","value"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,OAAtB,EAA+BC,SAA/B,QAA+C,mBAA/C;AACA,SAAQC,MAAR,QAAqB,cAArB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;IAEMC,G;;;;;;;;;;;;;;;;;;4DACI;AACFC,MAAAA,OAAO,EAAE,EADP;AAEFC,MAAAA,OAAO,EAAE,KAFP;AAGFC,MAAAA,WAAW,EAAE;AAHX,K;;+DAMK,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACPA,cAAAA,KAAK,CAACC,cAAN;;AACA,oBAAKC,QAAL,CAAc;AACVL,gBAAAA,OAAO,EAAE;AADC,eAAd;;AAFO;AAAA;AAAA,+CAOoBH,IAAI,CAACS,GAAL,CAASC,WAAT,EAPpB;;AAAA;AAOGC,cAAAA,QAPH;AAAA;AAAA,+CAQGV,IAAI,CAACW,OAAL,CACLC,WADK,CACO,MAAKC,KAAL,CAAWT,WADlB,EAELU,IAFK,CAEA;AACFC,gBAAAA,IAAI,EAACL,QAAQ,CAAC,CAAD;AADX,eAFA,CARH;;AAAA;AAaHZ,cAAAA,MAAM,CAACkB,SAAP;AAbG;AAAA;;AAAA;AAAA;AAAA;;AAgBH,oBAAKT,QAAL,CAAc;AAACL,gBAAAA,OAAO,EAAE,YAAIA;AAAd,eAAd;;AAhBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;6BAqBH;AAAA;;AACJ,aACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD;AAAM,QAAA,QAAQ,MAAd;AAAe,QAAA,QAAQ,EAAE,KAAKe,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD,CAAM,KAAN;AACI,QAAA,KAAK,EAAE,CADX;AACc,QAAA,KAAK,EAAC,UADpB;AAEI,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWT,WAFtB;AAGI,QAAA,QAAQ,EAAE,kBAAAC,KAAK;AAAA,iBAAI,MAAI,CAACE,QAAL,CAAc;AAACH,YAAAA,WAAW,EAAEC,KAAK,CAACa,MAAN,CAAaC;AAA3B,WAAd,CAAJ;AAAA,SAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAOI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ,CADJ,CADJ,CADJ,CADJ;AAiBH;;;;EA9Ca3B,S;;AAgDlB,eAAeS,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport Layout from '../../components/Layout';\nimport {Form, Button, Message, Container} from 'semantic-ui-react';\nimport {Router} from '../../routes';\nimport web3 from '../../ethereum/web3';\nimport poll from '../../ethereum/poll';\n\nclass Add extends Component{\n    state={\n        message: '',\n        loading: false,\n        description: ''\n    }\n\n    onSubmit = async (event) =>{\n        event.preventDefault();\n        this.setState({\n            message: ''\n        });\n\n        try{\n            const accounts = await web3.eth.getAccounts();\n            await poll.methods\n            .askQuestion(this.state.description)\n            .send({\n                from:accounts[0]\n            });\n            Router.pushRoute(`/ongoing`);\n        }\n        catch (err){\n            this.setState({message: err.message});\n        }\n        \n    }\n\n    render(){\n        return(\n            <Layout>\n                <Container>\n                    <center>\n                        <Form inverted onSubmit={this.onSubmit} >\n                            <Form.Input \n                                width={6} label='Question'\n                                value={this.state.description}\n                                onChange={event => this.setState({description: event.target.value})}    \n                            />\n                            \n                            <Button>Add Question</Button>\n                        </Form>\n                    </center>\n                </Container>\n            </Layout>\n        );\n    }\n}\nexport default Add;"]},"metadata":{},"sourceType":"module"}