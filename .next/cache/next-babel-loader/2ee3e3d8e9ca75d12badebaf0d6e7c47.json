{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Button, Card } from 'semantic-ui-react';\nimport poll from '../ethereum/poll';\nimport web3 from '../ethereum/web3';\nimport { Router } from 'next/router';\n\nvar Question = /*#__PURE__*/function (_Component) {\n  _inherits(Question, _Component);\n\n  var _super = _createSuper(Question);\n\n  function Question() {\n    var _this;\n\n    _classCallCheck(this, Question);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      loading: false,\n      errorMessage: '',\n      show: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"voteYes\", function _callee() {\n      var accounts;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true,\n                errorMessage: ''\n              });\n\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 4:\n              accounts = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(poll.methods.voteYay(_this.props.id).send({\n                from: accounts[0]\n              }));\n\n            case 7:\n              Router.pushRoute('/ongoing');\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n\n              _this.setState({\n                errorMessage: _context.t0.message\n              });\n\n            case 13:\n              _this.setState({\n                loading: false\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 10]], Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"voteNo\", function _callee2() {\n      var accounts;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.setState({\n                loading: true,\n                errorMessage: ''\n              });\n\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 4:\n              accounts = _context2.sent;\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(poll.methods.voteNay(_this.props.id).send({\n                from: accounts[0]\n              }));\n\n            case 7:\n              Router.pushRoute('/ongoing');\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](1);\n\n              _this.setState({\n                errorMessage: _context2.t0.message\n              });\n\n            case 13:\n              _this.setState({\n                loading: false\n              });\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 10]], Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"declare\", function _callee3() {\n      var accounts;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 2:\n              accounts = _context3.sent;\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(poll.methods.updateAnswer(_this.props.id).send({\n                from: accounts[0]\n              }));\n\n            case 5:\n              document.location.reload();\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(Question, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var manager, accounts;\n      return _regeneratorRuntime.async(function componentDidMount$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(poll.methods.manager().call());\n\n            case 2:\n              manager = _context4.sent;\n              _context4.next = 5;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 5:\n              accounts = _context4.sent;\n\n              if (accounts[0] == manager) {\n                this.setState({\n                  show: true\n                });\n              }\n\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var er = this.state.errorMessage;\n      var _this$props = this.props,\n          question = _this$props.question,\n          complete = _this$props.complete;\n      return __jsx(Card.Group, {\n        centered: true\n      }, complete ? null : __jsx(Card, null, __jsx(Card.Content, null, __jsx(Card.Header, {\n        style: {\n          marginTop: '20px'\n        }\n      }, question), __jsx(Card.Content, {\n        extra: true\n      }, __jsx(\"div\", {\n        style: {\n          marginTop: '15px'\n        }\n      }, __jsx(Button, {\n        basic: true,\n        color: \"green\",\n        onClick: this.voteYes\n      }, \"Yay\"), __jsx(Button, {\n        basic: true,\n        color: \"red\",\n        onClick: this.voteNo\n      }, \"Nay\"), this.state.show ? __jsx(Button, {\n        fluid: true,\n        onClick: this.declare,\n        style: {\n          marginTop: '15px'\n        },\n        size: \"large\"\n      }, \"Declare Result\") : null)))));\n      if (er) alert('Sorry! You cannot vote!');\n    }\n  }]);\n\n  return Question;\n}(Component);\n\nexport default Question;","map":null,"metadata":{},"sourceType":"module"}